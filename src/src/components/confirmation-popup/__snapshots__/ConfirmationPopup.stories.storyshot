// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Confirmation Popup Default 1`] = `
<ConfirmationPopup
  cancelButton={
    Object {
      "label": "No, resume my process please",
      "onClick": [Function],
      "styling": "bcgov-normal-white btn bcgov-consistent-width",
    }
  }
  confirmButton={
    Object {
      "label": "Yes, cancel my process please",
      "onClick": [Function],
      "styling": "bcgov-normal-blue btn bcgov-consistent-width",
    }
  }
  mainButton={
    Object {
      "label": "Click Me",
      "onClick": [Function],
      "styling": "bcgov-normal-white btn",
    }
  }
  modal={
    Object {
      "body": [Function],
      "show": false,
      "title": "Cancel process?",
    }
  }
>
  <Button
    disabled={false}
    hasLoader={false}
    label="Click Me"
    onClick={[Function]}
    styling="bcgov-normal-white btn"
    testId="main-cancel-btn"
  >
    <button
      className="bcgov-button bcgov-normal-white btn"
      data-testid="main-cancel-btn"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Click Me
    </button>
  </Button>
  <Modal
    animation={true}
    autoFocus={true}
    backdrop={true}
    dialogAs={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "ModalDialog",
        "render": [Function],
      }
    }
    enforceFocus={true}
    keyboard={true}
    onHide={[Function]}
    restoreFocus={true}
    show={false}
  >
    <Modal
      autoFocus={true}
      backdrop={true}
      backdropTransition={[Function]}
      containerClassName="modal-open"
      enforceFocus={true}
      keyboard={true}
      manager={
        BootstrapModalManager {
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "modals": Array [],
          "scrollbarSize": 0,
        }
      }
      onEnter={[Function]}
      onEntering={[Function]}
      onEscapeKeyDown={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onHide={[Function]}
      renderBackdrop={[Function]}
      renderDialog={[Function]}
      restoreFocus={true}
      show={false}
      transition={[Function]}
    />
  </Modal>
</ConfirmationPopup>
`;

exports[`Storyshots Confirmation Popup Mobile 1`] = `
<ConfirmationPopup
  cancelButton={
    Object {
      "label": "No, resume my process please",
      "onClick": [Function],
      "styling": "bcgov-normal-white btn bcgov-consistent-width",
    }
  }
  confirmButton={
    Object {
      "label": "Yes, cancel my process please",
      "onClick": [Function],
      "styling": "bcgov-normal-blue btn bcgov-consistent-width",
    }
  }
  mainButton={
    Object {
      "label": "Click Me",
      "onClick": [Function],
      "styling": "bcgov-normal-white btn",
    }
  }
  modal={
    Object {
      "body": [Function],
      "show": false,
      "title": "Cancel process?",
    }
  }
>
  <Button
    disabled={false}
    hasLoader={false}
    label="Click Me"
    onClick={[Function]}
    styling="bcgov-normal-white btn"
    testId="main-cancel-btn"
  >
    <button
      className="bcgov-button bcgov-normal-white btn"
      data-testid="main-cancel-btn"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Click Me
    </button>
  </Button>
  <Modal
    animation={true}
    autoFocus={true}
    backdrop={true}
    dialogAs={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "ModalDialog",
        "render": [Function],
      }
    }
    enforceFocus={true}
    keyboard={true}
    onHide={[Function]}
    restoreFocus={true}
    show={false}
  >
    <Modal
      autoFocus={true}
      backdrop={true}
      backdropTransition={[Function]}
      containerClassName="modal-open"
      enforceFocus={true}
      keyboard={true}
      manager={
        BootstrapModalManager {
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "modals": Array [],
          "scrollbarSize": 0,
        }
      }
      onEnter={[Function]}
      onEntering={[Function]}
      onEscapeKeyDown={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onHide={[Function]}
      renderBackdrop={[Function]}
      renderDialog={[Function]}
      restoreFocus={true}
      show={false}
      transition={[Function]}
    />
  </Modal>
</ConfirmationPopup>
`;
