// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Confirmation Popup Default 1`] = `
<State
  store={
    Store {
      "callbacks": Array [
        Object {
          "callback": [Function],
          "subscription": "abeffc8e-62c0-464d-8b05-1204f7fba456",
        },
      ],
      "state": Object {
        "show": false,
      },
    }
  }
>
  <ConfirmationPopup
    cancelButton={
      Object {
        "label": "No, resume my process please",
        "onClick": [Function],
        "styling": "normal-white btn consistent-width",
      }
    }
    confirmButton={
      Object {
        "label": "Yes, cancel my process please",
        "onClick": [Function],
        "styling": "normal-blue btn consistent-width",
      }
    }
    key="popup"
    mainButton={
      Object {
        "label": "Click Me",
        "onClick": [Function],
        "styling": "normal-white btn",
      }
    }
    modal={
      Object {
        "body": [Function],
        "show": false,
        "title": "Cancel process?",
      }
    }
  >
    <Button
      disabled={false}
      hasLoader={false}
      label="Click Me"
      onClick={[Function]}
      styling="normal-white btn"
      testId="main-cancel-btn"
    >
      <button
        className="bcgov-button normal-white btn"
        data-test-id="main-cancel-btn"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Click Me
      </button>
    </Button>
    <Modal
      animation={true}
      autoFocus={true}
      backdrop={true}
      dialogAs={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "ModalDialog",
          "render": [Function],
        }
      }
      enforceFocus={true}
      keyboard={true}
      onHide={[Function]}
      restoreFocus={true}
      show={false}
    >
      <Modal
        autoFocus={true}
        backdrop={true}
        backdropTransition={[Function]}
        containerClassName="modal-open"
        enforceFocus={true}
        keyboard={true}
        manager={
          BootstrapModalManager {
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "modals": Array [],
            "scrollbarSize": 0,
          }
        }
        onEnter={[Function]}
        onEntering={[Function]}
        onEscapeKeyDown={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onHide={[Function]}
        renderBackdrop={[Function]}
        renderDialog={[Function]}
        restoreFocus={true}
        show={false}
        transition={[Function]}
      />
    </Modal>
  </ConfirmationPopup>
</State>
`;

exports[`Storyshots Confirmation Popup Mobile 1`] = `
<State
  store={
    Store {
      "callbacks": Array [
        Object {
          "callback": [Function],
          "subscription": "abeffc8e-62c0-464d-8b05-1204f7fba456",
        },
        Object {
          "callback": [Function],
          "subscription": "ade035c4-e70b-4bb0-ad5a-cbecd64b6d88",
        },
      ],
      "state": Object {
        "show": false,
      },
    }
  }
>
  <ConfirmationPopup
    cancelButton={
      Object {
        "label": "No, resume my process please",
        "onClick": [Function],
        "styling": "normal-white btn consistent-width",
      }
    }
    confirmButton={
      Object {
        "label": "Yes, cancel my process please",
        "onClick": [Function],
        "styling": "normal-blue btn consistent-width",
      }
    }
    key="popup"
    mainButton={
      Object {
        "label": "Click Me",
        "onClick": [Function],
        "styling": "normal-white btn",
      }
    }
    modal={
      Object {
        "body": [Function],
        "show": false,
        "title": "Cancel process?",
      }
    }
  >
    <Button
      disabled={false}
      hasLoader={false}
      label="Click Me"
      onClick={[Function]}
      styling="normal-white btn"
      testId="main-cancel-btn"
    >
      <button
        className="bcgov-button normal-white btn"
        data-test-id="main-cancel-btn"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Click Me
      </button>
    </Button>
    <Modal
      animation={true}
      autoFocus={true}
      backdrop={true}
      dialogAs={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "ModalDialog",
          "render": [Function],
        }
      }
      enforceFocus={true}
      keyboard={true}
      onHide={[Function]}
      restoreFocus={true}
      show={false}
    >
      <Modal
        autoFocus={true}
        backdrop={true}
        backdropTransition={[Function]}
        containerClassName="modal-open"
        enforceFocus={true}
        keyboard={true}
        manager={
          BootstrapModalManager {
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "modals": Array [],
            "scrollbarSize": 0,
          }
        }
        onEnter={[Function]}
        onEntering={[Function]}
        onEscapeKeyDown={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onHide={[Function]}
        renderBackdrop={[Function]}
        renderDialog={[Function]}
        restoreFocus={true}
        show={false}
        transition={[Function]}
      />
    </Modal>
  </ConfirmationPopup>
</State>
`;
