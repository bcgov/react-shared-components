// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Date Pick Default 1`] = `
<State
  store={
    Store {
      "callbacks": Array [
        Object {
          "callback": [Function],
          "subscription": "8f58fd61-e089-42b8-b3b3-4a08c1dfafd9",
        },
      ],
      "state": Object {
        "selectedDate": 1975-08-20T06:15:30.000Z,
      },
    }
  }
>
  <DatePick
    isRequired={false}
    key="datepick"
    label=""
    selectedDate={1975-08-20T06:15:30.000Z}
    setSelectedDate={[Function]}
  >
    <div
      className="bcgov-flex"
    >
      <MdDateRange
        className="bcgov-move-right"
        size={32}
      >
        <IconBase
          attr={
            Object {
              "viewBox": "0 0 24 24",
            }
          }
          className="bcgov-move-right"
          size={32}
        >
          <svg
            className="bcgov-move-right"
            fill="currentColor"
            height={32}
            size={32}
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width={32}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
              key="0"
            />
          </svg>
        </IconBase>
      </MdDateRange>
      <a
        allowSameDay={false}
        customTimeInput={null}
        dateFormat="MM/dd/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={1975-08-20T06:15:30.000Z}
        shouldCloseOnSelect={true}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      >
        <o
          enableTabLoop={true}
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperOnKeyDown={[Function]}
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <input
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                type="text"
                value="08/19/1975"
              />
            </div>
          }
        >
          <Manager
            className="react-datepicker-manager"
          >
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <input
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      type="text"
                      value="08/19/1975"
                    />
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </o>
      </a>
    </div>
  </DatePick>
</State>
`;

exports[`Storyshots Date Pick Mobile 1`] = `
<State
  store={
    Store {
      "callbacks": Array [
        Object {
          "callback": [Function],
          "subscription": "8f58fd61-e089-42b8-b3b3-4a08c1dfafd9",
        },
        Object {
          "callback": [Function],
          "subscription": "67f488c6-d1fb-4206-bf19-e71eb4491eaf",
        },
        Object {
          "callback": [Function],
          "subscription": "6126c9d9-e049-4714-a7b9-55d235eedaae",
        },
      ],
      "state": Object {
        "selectedDate": 1975-08-20T06:15:30.000Z,
      },
    }
  }
>
  <DatePick
    isRequired={false}
    key="datepick"
    label=""
    selectedDate={1975-08-20T06:15:30.000Z}
    setSelectedDate={[Function]}
  >
    <div
      className="bcgov-flex"
    >
      <MdDateRange
        className="bcgov-move-right"
        size={32}
      >
        <IconBase
          attr={
            Object {
              "viewBox": "0 0 24 24",
            }
          }
          className="bcgov-move-right"
          size={32}
        >
          <svg
            className="bcgov-move-right"
            fill="currentColor"
            height={32}
            size={32}
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width={32}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
              key="0"
            />
          </svg>
        </IconBase>
      </MdDateRange>
      <a
        allowSameDay={false}
        customTimeInput={null}
        dateFormat="MM/dd/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={1975-08-20T06:15:30.000Z}
        shouldCloseOnSelect={true}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      >
        <o
          enableTabLoop={true}
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperOnKeyDown={[Function]}
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <input
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                type="text"
                value="08/19/1975"
              />
            </div>
          }
        >
          <Manager
            className="react-datepicker-manager"
          >
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <input
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      type="text"
                      value="08/19/1975"
                    />
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </o>
      </a>
    </div>
  </DatePick>
</State>
`;

exports[`Storyshots Date Pick With Label 1`] = `
<State
  store={
    Store {
      "callbacks": Array [
        Object {
          "callback": [Function],
          "subscription": "8f58fd61-e089-42b8-b3b3-4a08c1dfafd9",
        },
        Object {
          "callback": [Function],
          "subscription": "67f488c6-d1fb-4206-bf19-e71eb4491eaf",
        },
      ],
      "state": Object {
        "selectedDate": 1975-08-20T06:15:30.000Z,
      },
    }
  }
>
  <DatePick
    isRequired={false}
    key="datepick"
    label="Select date"
    selectedDate={1975-08-20T06:15:30.000Z}
    setSelectedDate={[Function]}
  >
    <div
      className="input-label"
    >
      <label
        htmlFor="Select date"
      >
        Select date
      </label>
       
    </div>
    <div
      className="bcgov-flex"
    >
      <MdDateRange
        className="bcgov-move-right"
        size={32}
      >
        <IconBase
          attr={
            Object {
              "viewBox": "0 0 24 24",
            }
          }
          className="bcgov-move-right"
          size={32}
        >
          <svg
            className="bcgov-move-right"
            fill="currentColor"
            height={32}
            size={32}
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width={32}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
              key="0"
            />
          </svg>
        </IconBase>
      </MdDateRange>
      <a
        allowSameDay={false}
        customTimeInput={null}
        dateFormat="MM/dd/yyyy"
        dateFormatCalendar="LLLL yyyy"
        disabled={false}
        disabledKeyboardNavigation={false}
        dropdownMode="scroll"
        enableTabLoop={true}
        excludeScrollbar={true}
        focusSelectedMonth={false}
        monthsShown={1}
        nextMonthButtonLabel="Next Month"
        nextYearButtonLabel="Next Year"
        onBlur={[Function]}
        onCalendarClose={[Function]}
        onCalendarOpen={[Function]}
        onChange={[Function]}
        onClickOutside={[Function]}
        onFocus={[Function]}
        onInputClick={[Function]}
        onInputError={[Function]}
        onKeyDown={[Function]}
        onMonthChange={[Function]}
        onSelect={[Function]}
        onYearChange={[Function]}
        preventOpenOnFocus={false}
        previousMonthButtonLabel="Previous Month"
        previousYearButtonLabel="Previous Year"
        readOnly={false}
        renderDayContents={[Function]}
        selected={1975-08-20T06:15:30.000Z}
        shouldCloseOnSelect={true}
        showFullMonthYearPicker={false}
        showMonthYearPicker={false}
        showPopperArrow={true}
        showPreviousMonths={false}
        showQuarterYearPicker={false}
        showTimeInput={false}
        showTimeSelect={false}
        showTwoColumnMonthYearPicker={false}
        showYearPicker={false}
        strictParsing={false}
        timeCaption="Time"
        timeInputLabel="Time"
        timeIntervals={30}
        withPortal={false}
        yearItemNumber={12}
      >
        <o
          enableTabLoop={true}
          hidePopper={true}
          popperComponent={null}
          popperModifiers={
            Object {
              "preventOverflow": Object {
                "boundariesElement": "viewport",
                "enabled": true,
                "escapeWithReference": true,
              },
            }
          }
          popperOnKeyDown={[Function]}
          popperPlacement="bottom-start"
          popperProps={Object {}}
          targetComponent={
            <div
              className="react-datepicker__input-container"
            >
              <input
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                type="text"
                value="08/19/1975"
              />
            </div>
          }
        >
          <Manager
            className="react-datepicker-manager"
          >
            <Reference>
              <InnerReference
                setReferenceNode={[Function]}
              >
                <div
                  className="react-datepicker-wrapper"
                >
                  <div
                    className="react-datepicker__input-container"
                  >
                    <input
                      className=""
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      type="text"
                      value="08/19/1975"
                    />
                  </div>
                </div>
              </InnerReference>
            </Reference>
          </Manager>
        </o>
      </a>
    </div>
  </DatePick>
</State>
`;
